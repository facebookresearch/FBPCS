## Creates and configures a common cloudtrail and cloudwatch log group  for collecting logs, events, metric generated by different PL event sources 

## Create s3 and services cloudwatch log group
resource "aws_cloudwatch_log_group" "cloudtrail_logs_s3" {
  name              = "/aws/cloudtrail/s3/${var.installation_tag}-cw-logs"
  retention_in_days = 7
}

### Setup common cloudtrail iam role and policies to write to cloudwatch log group
resource "aws_iam_role" "cloudtrail_cloudwatch_role" {
  name = "${var.installation_tag}-ct-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "",
      "Effect": "Allow",
      "Principal": {
        "Service": "cloudtrail.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy" "cloudtrail_cloudwatch_write_policy" {
  name = "${var.installation_tag}-ct-policy"
  role = aws_iam_role.cloudtrail_cloudwatch_role.id

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AWSCloudTrailCreateLogs",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "${aws_cloudwatch_log_group.cloudtrail_logs_s3.arn}:*"
            ]
        }
    ]
}
EOF
}

### Setup common cloudtrail to send all events to common cloudwatch log group
resource "aws_cloudtrail" "cloudtrail_cloudwatch_logging_s3" {
  name                       = "${var.installation_tag}-ct-trail-s3"
  s3_bucket_name             = var.s3_logging_bucket_name
  s3_key_prefix              = "pl_advertiser_logs_s3"
  cloud_watch_logs_role_arn  = aws_iam_role.cloudtrail_cloudwatch_role.arn
  cloud_watch_logs_group_arn = "${aws_cloudwatch_log_group.cloudtrail_logs_s3.arn}:*"

  event_selector {
    read_write_type           = "All"
    include_management_events = true
  }
  depends_on = [aws_s3_bucket_policy.s3_logging_bucket_policy]
}


## Get the advertiser infra common kinesis Log Stream
data "aws_kinesis_stream" "logs_kinesis_stream" {
  name       = var.kinesis_log_stream_name
  depends_on = [aws_kinesis_stream.logs_kinesis_stream]
}


## Create IAM Role for CloudWatch to publish logs to Kinesis
resource "aws_iam_role" "cloudwatch_log" {
  name = "${var.installation_tag}-cw-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "logs.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

## Create IAM Policy for CloudWatch to publish logs to the advertiser infra commot Kinesis stream
resource "aws_iam_role_policy" "kinesis_write_policy" {
  name = "${var.installation_tag}-cw-policy"
  role = aws_iam_role.cloudwatch_log.id

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AWSCloudwatchKinesisWriteLogs",
            "Effect": "Allow",
            "Action": [
                "kinesis:PutRecord"
            ],
            "Resource": [
                "${data.aws_kinesis_stream.logs_kinesis_stream.arn}"
            ]
        }
    ]
}
EOF
}
