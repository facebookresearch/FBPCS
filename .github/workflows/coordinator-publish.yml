name: Publish Coordinator Image

on:
  workflow_dispatch:
    inputs:
      new_tag:
        description: "The new tag of the docker image"
        required: false
        type: string
        default: latest-build
      tracker_hash:
        description: "[Internal usage] Used for tracking workflow job status within Meta infra"
        required: false
        type: string
  workflow_call:
    inputs:
      new_tag:
        description: "The new tag of the docker image"
        required: false
        type: string
        default: latest-build
      tracker_hash:
        description: "[Internal usage] Used for tracking workflow job status within Meta infra"
        required: false
        type: string

env:
  DISTRO: ubuntu
  REGISTRY: ghcr.io
  LOCAL_IMAGE_NAME: coordinator-local
  REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/coordinator

jobs:
  push:
    runs-on: ubuntu-latest
    name: Build and publish image
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Print Tracker Hash
        run: echo ${{ inputs.tracker_hash }}

      - name: Build image
        run: |
          docker build --build-arg FBPCS_BUNDLE_ID=${{ inputs.new_tag }} -f ./fbpcs/Dockerfile -t ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} .

      # Tests will be added here

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker image
        run: |
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.REGISTRY_IMAGE_NAME }}:${{ github.sha }}
          ${{ ! contains(github.ref, 'refs/pull') }} && docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.REGISTRY_IMAGE_NAME }}:${{ github.ref_name }}
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.REGISTRY_IMAGE_NAME }}:${{ inputs.new_tag }}

      - name: Push image to registry
        run: |
          docker push --all-tags ${{ env.REGISTRY_IMAGE_NAME }}
