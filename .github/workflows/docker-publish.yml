name: Publish OneDocker image

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually running this workflow will skip "Check New Commits" step and build image directly'
        default: "Run"
      new_tag:
        description: "The new tag of the docker image"
        required: false
        type: string
        default: latest-build
      tracker_hash:
        description: "[Internal usage] Used for tracking workflow job status within Meta infra"
        required: false
        type: str

env:
  DISTRO: ubuntu
  REGISTRY: ghcr.io
  LOCAL_IMAGE_NAME: fbpcs/onedocker
  RC_REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/rc/onedocker
  PROD_REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/onedocker
  COORDINATOR_IMAGE: ghcr.io/facebookresearch/fbpcs/coordinator
  PL_CONTAINER_NAME: e2e_pl_container
  PA_CONTAINER_NAME: e2e_pa_container
  TIME_RANGE: 24 hours

jobs:
  ### Build and publish rc/onedocker image
  build_image:
    name: Build Image
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Print Tracker Hash
        run: echo ${{ github.event.inputs.tracker_hash }}

      - name: Remove unused images
        run: |
          docker image prune -af

      - name: Build onedocker image in rc
        run: |
          ./build-docker.sh onedocker -t ${{github.event.inputs.new_tag}} -f

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker image
        run: |
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{github.event.inputs.new_tag}} ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{github.event.inputs.new_tag}} ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{github.event.inputs.new_tag}}
          # temporarily tagging with rc because the task definition
          # (fbpcs-github-cicd:4 https://us-west-2.console.aws.amazon.com/ecs/home?region=us-west-2#/taskDefinitions/fbpcs-github-cicd/4)
          # points at :rc instead of latest-build
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{github.event.inputs.new_tag}} ${{ env.RC_REGISTRY_IMAGE_NAME }}:rc
      - name: Push image with to rc registry
        run: |
          docker push --all-tags ${{ env.RC_REGISTRY_IMAGE_NAME }}

      - name: Cleanup ECS running tasks and previous running results
        run: |
          ./cleanup.sh
        working-directory: ./fbpcs/tests/github/

      - name: Pull coordinator image
        run: |
          docker pull ${{ env.COORDINATOR_IMAGE }}:${{ github.event.inputs.new_tag }}

      ### Private Lift E2E tests
      - name: Start container
        run: |
          ./start_container.sh ${{ env.PL_CONTAINER_NAME }} ${{ env.COORDINATOR_IMAGE }}:${{ github.event.inputs.new_tag }}
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Create Instance
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} create_instance
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Data validation
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} data_validation
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Pid shard
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} pid_shard
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Pid prepare
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} pid_prepare
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Id Match
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - PID export metrics
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} pid_metric_export
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Prepare Compute Input - Id Spine combine
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} id_spine_combiner
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Prepare Compute Input - ReSharding
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} reshard
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Compute Metrics
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Aggregate Shards
        run: |
          ./lift_run_stages.sh ${{ env.PL_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PL_CONTAINER_NAME }} lift
        working-directory: ./fbpcs/tests/github/

      - name: Lift - Validate Results
        run: |
          ./validate_result.sh lift
        working-directory: ./fbpcs/tests/github/

      - name: Cleanup
        run: |
          docker stop ${{ env.PL_CONTAINER_NAME }}
          docker rm ${{ env.PL_CONTAINER_NAME }}

      - name: Cleanup ECS running tasks and previous running results
        run: |
          ./cleanup.sh
        working-directory: ./fbpcs/tests/github/

      # attribution e2e test
      - name: Start container
        run: |
          ./start_container.sh ${{ env.PA_CONTAINER_NAME }} ${{ env.COORDINATOR_IMAGE }}:${{ github.event.inputs.new_tag }}
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Create Instance
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} create_instance
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Data validation
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} data_validation
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Id Match
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - PID export metrics
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} pid_metric_export
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Prepare Compute Input - Id Spine combine
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} id_spine_combiner
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Prepare Compute Input - ReSharding
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} reshard
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Decoupled Attribution
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Decoupled Aggregation
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Aggregate Shards
        run: |
          ./attribution_run_stages.sh ${{ env.PA_CONTAINER_NAME }} run_next
        working-directory: ./fbpcs/tests/github/

      - name: Check Status
        timeout-minutes: 5
        run: |
          ./check_status.sh ${{ env.PA_CONTAINER_NAME }} attribution
        working-directory: ./fbpcs/tests/github/

      - name: Attribution - Validate Result
        run: |
          ./validate_result.sh attribution
        working-directory: ./fbpcs/tests/github/

      - name: Cleanup
        run: |
          docker stop ${{ env.PA_CONTAINER_NAME }}
          docker rm ${{ env.PA_CONTAINER_NAME }}


      - name: Pull image from rc registry
        run: |
          docker pull ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }}

      - name: Set output
        id: vars
        run: echo ::set-output name=ref::${GITHUB_REF##*/}

      - name: Tag image
        run: |
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{github.event.inputs.new_tag}}
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{ steps.vars.outputs.ref }}

      - name: Push docker image to prod registry
        run: |
          docker push --all-tags ${{ env.PROD_REGISTRY_IMAGE_NAME }}
